#Задача 1
def transpose_matrix(matrix):
    """
    Функция для транспонирования матрицы.

    Аргументы:
    matrix (list): Матрица, представленная в виде списка списков.

    Возвращаемое значение:
    list: Транспонированная матрица, также представленная в виде списка списков.
    """
    # Получаем количество строк и столбцов исходной матрицы
    rows = len(matrix)
    cols = len(matrix[0])

    # Создаем новую матрицу с размерами, обратными исходной (транспонированную матрицу)
    transposed_matrix = [[0 for _ in range(rows)] for _ in range(cols)]

    # Транспонируем исходную матрицу
    for i in range(rows):
        for j in range(cols):
            transposed_matrix[j][i] = matrix[i][j]

    return transposed_matrix
#Задача 2
def keyword_args_to_dict(**kwargs):
    """
    Функция принимает ключевые параметры и возвращает словарь,
    где ключ - значение переданного аргумента, а значение - имя аргумента.

    Аргументы:
    **kwargs: Ключевые параметры.

    Возвращаемое значение:
    dict: Словарь, содержащий значения и имена переданных аргументов.
    """
    args_dict = {}
    for key, value in kwargs.items():
        # Если ключ не является хешируемым, используем его строковое представление
        hashable_key = key if hash(key) else str(key)
        args_dict[value] = hashable_key
    return args_dict

